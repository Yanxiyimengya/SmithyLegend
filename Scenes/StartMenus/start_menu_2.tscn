[gd_scene load_steps=12 format=3 uid="uid://cctfh7b2yfd0i"]

[ext_resource type="AudioStream" uid="uid://b558o4m88ekmr" path="res://Audio/StartMenuBGM2.MP3" id="1_t5j8v"]
[ext_resource type="Texture2D" uid="uid://b6hwrmnfwu6ho" path="res://Graphics/StartMenu/background2.png" id="1_xvb34"]
[ext_resource type="Texture2D" uid="uid://dbjydtcvyxdk1" path="res://Graphics/StartMenu/door.png" id="2_4m80e"]
[ext_resource type="FontFile" uid="uid://c0n8s8gx2dm18" path="res://Fonts/MinecraftAECN.ttf" id="4_bxykl"]

[sub_resource type="GDScript" id="GDScript_r3qrl"]
script/source = "extends Control;

var dragging : bool = false;
var startting : bool = false;
var process : float = 0.0;
var fall_speed : float = 0.0;

@onready var audio_stream_player: AudioStreamPlayer = $AudioStreamPlayer;
@onready var dool_control: Control = $Control;
@onready var door: TextureRect = $Control/Door;
@onready var animation_player: AnimationPlayer = %AnimationPlayer;
@onready var lyric_canvas_layer: CanvasLayer = $LyricCanvasLayer;

const GLASS_BOTTLE = preload(\"res://Scenes/StartMenus/GlassBottle.tscn\");
static var lyric : LyricLoader.Lyric = null;
var audio_process : int = 0;
var pre_lyric_lable : Label = null;
var lyric_lable : Label = null;

func _ready() -> void : 
	lyric = LyricLoader.load_lyric(StartMenuBGM2Lyric.lyric);
	
	SceneManager.in_shot = load(\"res://Scenes/SceneManager/Shots/Filter/FilterIntro.tscn\");
	SceneManager.out_shot = load(\"res://Scenes/SceneManager/Shots/Filter/FilterExit.tscn\");
	await get_tree().create_timer(0.3);
	animation_player.play(&\"Default\");
	
	audio_stream_player.play();

func _process(delta: float) -> void:
	if (startting) : return;
	if (audio_stream_player.playing && lyric != null) : 
		var pos : float = audio_stream_player.get_playback_position();
		if (audio_process < lyric.lyric_time.size() && pos >= lyric.lyric_time[audio_process]) : 
			pre_lyric_lable = lyric_lable;
			lyric_lable = lyric_canvas_layer.get_child(audio_process % lyric_canvas_layer.get_child_count());
			lyric_lable.text = lyric.lyric_list[audio_process];
			audio_process += 1;
			
			var tween : Tween = get_tree().create_tween().set_parallel();
			if (pre_lyric_lable) : 
				tween.tween_property(pre_lyric_lable, \"position:y\", -40, 0.3).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);
				tween.tween_property(pre_lyric_lable, \"scale\", Vector2.ONE, 0.3).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);
			tween.tween_property(lyric_lable, \"position:y\", 40, 0.3).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);
			tween.tween_property(lyric_lable, \"scale\", Vector2.ONE * 3, 0.3).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);
			tween.tween_property(lyric_lable, \"pivot_offset\", lyric_lable.size / 2 + Vector2(randf_range(-20,20),randf_range(-10,10)), 0.3).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);
	
	if (!dragging) : 
		if (process > 0.0) : 
			fall_speed += delta * 2500;
		process -= fall_speed * delta;
	process = clamp(process, 0.0, 300.0);
	door.position.y = -process;

func _input(event: InputEvent) -> void :
	if (startting) : return;
	if (event is InputEventMouseButton) : 
		if (dool_control.get_rect().has_point(event.global_position) && event.button_mask == MOUSE_BUTTON_MASK_LEFT) : 
			if (event.is_pressed()) : 
				dragging = true;
		if (event.is_released()) : 
			dragging = false;
			fall_speed = 400.0;
			if (process > 290) : 
				animation_player.play(&\"Starting\");
				startting = true;
				SceneManager.change_scene_form_packed(Global.resource_preloader.get_resource(\"main_menu\"));
	elif (dragging && event is InputEventMouseMotion) : 
		if (event.button_mask == MOUSE_BUTTON_MASK_LEFT) : 
			process -= event.relative.y;

const RUBBISH_LIST : Array = [
	preload(\"res://Graphics/Item/glass_bottle.png\"),
	preload(\"res://Graphics/Item/Iron/bucket.png\"),
	preload(\"res://Graphics/Item/bundle_filled.png\")
];
func _on_timer_timeout() -> void:
	var bottle : Node2D = GLASS_BOTTLE.instantiate();
	bottle.global_position.x = get_viewport().size.x + 50;
	bottle.z_pos = 640 + randf_range(-20, 100);
	bottle.texture = RUBBISH_LIST[randi() % 3];
	self.add_child(bottle);

func _on_audio_stream_player_finished() -> void:
	audio_stream_player.play();
	audio_process = 0.0;
"

[sub_resource type="LabelSettings" id="LabelSettings_uckqx"]
font = ExtResource("4_bxykl")
font_size = 48
shadow_color = Color(0, 0, 0, 0.619608)
shadow_offset = Vector2(2, 2)

[sub_resource type="Animation" id="Animation_1xwaf"]
resource_name = "Default"
length = 0.45
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Control/Door/Label:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.133333, 0.266667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.1, 1.1), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_8ftfr"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Control/Door/Label:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_wkp6e"]
resource_name = "Startting"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera2D:zoom")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0166667, 0.0333333, 0.05, 0.0666667, 0.0833333, 0.1, 0.116667, 0.133333, 0.15, 0.166667, 0.183333, 0.2, 0.216667, 0.233333, 0.25, 0.266667, 0.283333, 0.3, 0.316667, 0.333333, 0.35, 0.366667, 0.383333, 0.4, 0.416667, 0.433333, 0.45, 0.466667, 0.483333, 0.5, 0.516667, 0.533333, 0.55, 0.566667, 0.583333, 0.6, 0.616667, 0.633333, 0.65, 0.666667, 0.683333, 0.7, 0.716667, 0.733333, 0.75, 0.766667, 0.783333, 0.8, 0.816667, 0.833333, 0.85, 0.866667, 0.883333, 0.9, 0.916667, 0.933333, 0.95, 0.966667, 0.983333, 1, 1.01667, 1.03333, 1.05, 1.06667, 1.08333, 1.1, 1.11667, 1.13333, 1.15, 1.16667, 1.18333, 1.2, 1.21667, 1.23333, 1.25, 1.26667, 1.28333, 1.3, 1.31667, 1.33333, 1.35, 1.36667, 1.38333, 1.4, 1.41667, 1.43333, 1.45, 1.46667, 1.48333, 1.5, 1.51667, 1.53333, 1.55, 1.56667, 1.58333, 1.6, 1.61667, 1.63333, 1.65, 1.66667, 1.68333, 1.7, 1.71667, 1.73333, 1.75, 1.76667, 1.78333, 1.8, 1.81667, 1.83333, 1.85, 1.86667, 1.88333, 1.9, 1.91667, 1.93333, 1.95, 1.96667, 1.98333, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.00026, 1.00026), Vector2(1.00103, 1.00103), Vector2(1.00231, 1.00231), Vector2(1.00411, 1.00411), Vector2(1.00642, 1.00642), Vector2(1.00923, 1.00923), Vector2(1.01256, 1.01256), Vector2(1.01639, 1.01639), Vector2(1.02072, 1.02072), Vector2(1.02556, 1.02556), Vector2(1.03089, 1.03089), Vector2(1.03671, 1.03671), Vector2(1.04302, 1.04302), Vector2(1.04981, 1.04981), Vector2(1.05709, 1.05709), Vector2(1.06484, 1.06484), Vector2(1.07306, 1.07306), Vector2(1.08175, 1.08175), Vector2(1.09089, 1.09089), Vector2(1.10048, 1.10048), Vector2(1.11052, 1.11052), Vector2(1.121, 1.121), Vector2(1.13191, 1.13191), Vector2(1.14324, 1.14324), Vector2(1.15498, 1.15498), Vector2(1.16714, 1.16714), Vector2(1.1797, 1.1797), Vector2(1.19264, 1.19264), Vector2(1.20597, 1.20597), Vector2(1.21967, 1.21967), Vector2(1.23373, 1.23373), Vector2(1.24815, 1.24815), Vector2(1.26291, 1.26291), Vector2(1.27801, 1.27801), Vector2(1.29343, 1.29343), Vector2(1.30916, 1.30916), Vector2(1.3252, 1.3252), Vector2(1.34152, 1.34152), Vector2(1.35813, 1.35813), Vector2(1.375, 1.375), Vector2(1.39213, 1.39213), Vector2(1.40951, 1.40951), Vector2(1.42712, 1.42712), Vector2(1.44495, 1.44495), Vector2(1.46299, 1.46299), Vector2(1.48122, 1.48122), Vector2(1.49964, 1.49964), Vector2(1.51824, 1.51824), Vector2(1.53699, 1.53699), Vector2(1.55589, 1.55589), Vector2(1.57492, 1.57492), Vector2(1.59407, 1.59407), Vector2(1.61332, 1.61332), Vector2(1.63267, 1.63267), Vector2(1.65211, 1.65211), Vector2(1.6716, 1.6716), Vector2(1.69116, 1.69116), Vector2(1.71075, 1.71075), Vector2(1.73037, 1.73037), Vector2(1.75, 1.75), Vector2(1.76963, 1.76963), Vector2(1.78925, 1.78925), Vector2(1.80884, 1.80884), Vector2(1.8284, 1.8284), Vector2(1.84789, 1.84789), Vector2(1.86733, 1.86733), Vector2(1.88668, 1.88668), Vector2(1.90593, 1.90593), Vector2(1.92508, 1.92508), Vector2(1.94411, 1.94411), Vector2(1.96301, 1.96301), Vector2(1.98176, 1.98176), Vector2(2.00036, 2.00036), Vector2(2.01878, 2.01878), Vector2(2.03701, 2.03701), Vector2(2.05505, 2.05505), Vector2(2.07288, 2.07288), Vector2(2.09049, 2.09049), Vector2(2.10787, 2.10787), Vector2(2.125, 2.125), Vector2(2.14187, 2.14187), Vector2(2.15848, 2.15848), Vector2(2.1748, 2.1748), Vector2(2.19084, 2.19084), Vector2(2.20657, 2.20657), Vector2(2.22199, 2.22199), Vector2(2.23709, 2.23709), Vector2(2.25185, 2.25185), Vector2(2.26627, 2.26627), Vector2(2.28033, 2.28033), Vector2(2.29403, 2.29403), Vector2(2.30736, 2.30736), Vector2(2.3203, 2.3203), Vector2(2.33286, 2.33286), Vector2(2.34502, 2.34502), Vector2(2.35676, 2.35676), Vector2(2.36809, 2.36809), Vector2(2.379, 2.379), Vector2(2.38948, 2.38948), Vector2(2.39952, 2.39952), Vector2(2.40911, 2.40911), Vector2(2.41825, 2.41825), Vector2(2.42694, 2.42694), Vector2(2.43516, 2.43516), Vector2(2.44291, 2.44291), Vector2(2.45019, 2.45019), Vector2(2.45698, 2.45698), Vector2(2.46329, 2.46329), Vector2(2.46911, 2.46911), Vector2(2.47444, 2.47444), Vector2(2.47928, 2.47928), Vector2(2.48361, 2.48361), Vector2(2.48744, 2.48744), Vector2(2.49077, 2.49077), Vector2(2.49358, 2.49358), Vector2(2.49589, 2.49589), Vector2(2.49769, 2.49769), Vector2(2.49897, 2.49897), Vector2(2.49974, 2.49974), Vector2(2.5, 2.5)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera2D:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0166667, 0.0333333, 0.05, 0.0666667, 0.0833333, 0.1, 0.116667, 0.133333, 0.15, 0.166667, 0.183333, 0.2, 0.216667, 0.233333, 0.25, 0.266667, 0.283333, 0.3, 0.316667, 0.333333, 0.35, 0.366667, 0.383333, 0.4, 0.416667, 0.433333, 0.45, 0.466667, 0.483333, 0.5, 0.516667, 0.533333, 0.55, 0.566667, 0.583333, 0.6, 0.616667, 0.633333, 0.65, 0.666667, 0.683333, 0.7, 0.716667, 0.733333, 0.75, 0.766667, 0.783333, 0.8, 0.816667, 0.833333, 0.85, 0.866667, 0.883333, 0.9, 0.916667, 0.933333, 0.95, 0.966667, 0.983333, 1, 1.01667, 1.03333, 1.05, 1.06667, 1.08333, 1.1, 1.11667, 1.13333, 1.15, 1.16667, 1.18333, 1.2, 1.21667, 1.23333, 1.25, 1.26667, 1.28333, 1.3, 1.31667, 1.33333, 1.35, 1.36667, 1.38333, 1.4, 1.41667, 1.43333, 1.45, 1.46667, 1.48333, 1.5, 1.51667, 1.53333, 1.55, 1.56667, 1.58333, 1.6, 1.61667, 1.63333, 1.65, 1.66667, 1.68333, 1.7, 1.71667, 1.73333, 1.75, 1.76667, 1.78333, 1.8, 1.81667, 1.83333, 1.85, 1.86667, 1.88333, 1.9, 1.91667, 1.93333, 1.95, 1.96667, 1.98333, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0.0119936, 0.00856688), Vector2(0.0479663, 0.0342616), Vector2(0.107893, 0.0770667), Vector2(0.191734, 0.136953), Vector2(0.29943, 0.213878), Vector2(0.430908, 0.307792), Vector2(0.586078, 0.418627), Vector2(0.764834, 0.54631), Vector2(0.967053, 0.690752), Vector2(1.1926, 0.851854), Vector2(1.44131, 1.02951), Vector2(1.71302, 1.22359), Vector2(2.00755, 1.43396), Vector2(2.32469, 1.66049), Vector2(2.66422, 1.90301), Vector2(3.02591, 2.16136), Vector2(3.40952, 2.43537), Vector2(3.81477, 2.72484), Vector2(4.2414, 3.02957), Vector2(4.68911, 3.34936), Vector2(5.15759, 3.684), Vector2(5.64653, 4.03324), Vector2(6.15558, 4.39684), Vector2(6.68441, 4.77458), Vector2(7.23263, 5.16617), Vector2(7.79989, 5.57135), Vector2(8.38579, 5.98985), Vector2(8.98993, 6.42138), Vector2(9.6119, 6.86564), Vector2(10.2513, 7.32233), Vector2(10.9076, 7.79114), Vector2(11.5804, 8.27174), Vector2(12.2693, 8.7638), Vector2(12.9738, 9.26699), Vector2(13.6933, 9.78096), Vector2(14.4275, 10.3054), Vector2(15.1758, 10.8398), Vector2(15.9376, 11.384), Vector2(16.7125, 11.9375), Vector2(17.5, 12.5), Vector2(18.2994, 13.071), Vector2(19.1103, 13.6502), Vector2(19.9321, 14.2372), Vector2(20.7642, 14.8316), Vector2(21.6061, 15.4329), Vector2(22.4571, 16.0408), Vector2(23.3168, 16.6548), Vector2(24.1844, 17.2746), Vector2(25.0595, 17.8996), Vector2(25.9413, 18.5295), Vector2(26.8294, 19.1639), Vector2(27.7231, 19.8022), Vector2(28.6218, 20.4441), Vector2(29.5248, 21.0891), Vector2(30.4316, 21.7368), Vector2(31.3415, 22.3868), Vector2(32.2539, 23.0385), Vector2(33.1682, 23.6916), Vector2(34.0838, 24.3456), Vector2(35, 25), Vector2(35.9162, 25.6544), Vector2(36.8318, 26.3084), Vector2(37.7461, 26.9615), Vector2(38.6585, 27.6132), Vector2(39.5684, 28.2632), Vector2(40.4752, 28.9109), Vector2(41.3782, 29.5559), Vector2(42.2769, 30.1978), Vector2(43.1706, 30.8361), Vector2(44.0587, 31.4705), Vector2(44.9405, 32.1004), Vector2(45.8156, 32.7254), Vector2(46.6832, 33.3452), Vector2(47.5429, 33.9592), Vector2(48.3939, 34.5671), Vector2(49.2358, 35.1684), Vector2(50.0679, 35.7628), Vector2(50.8897, 36.3498), Vector2(51.7006, 36.929), Vector2(52.5, 37.5), Vector2(53.2875, 38.0625), Vector2(54.0624, 38.616), Vector2(54.8242, 39.1602), Vector2(55.5725, 39.6946), Vector2(56.3066, 40.219), Vector2(57.0262, 40.733), Vector2(57.7307, 41.2362), Vector2(58.4196, 41.7283), Vector2(59.0924, 42.2089), Vector2(59.7487, 42.6777), Vector2(60.3881, 43.1344), Vector2(61.0101, 43.5786), Vector2(61.6142, 44.0101), Vector2(62.2001, 44.4286), Vector2(62.7674, 44.8338), Vector2(63.3156, 45.2254), Vector2(63.8444, 45.6032), Vector2(64.3535, 45.9668), Vector2(64.8424, 46.316), Vector2(65.3109, 46.6506), Vector2(65.7586, 46.9704), Vector2(66.1852, 47.2752), Vector2(66.5905, 47.5646), Vector2(66.9741, 47.8386), Vector2(67.3358, 48.097), Vector2(67.6753, 48.3395), Vector2(67.9925, 48.566), Vector2(68.287, 48.7764), Vector2(68.5587, 48.9705), Vector2(68.8074, 49.1481), Vector2(69.0329, 49.3092), Vector2(69.2352, 49.4537), Vector2(69.4139, 49.5814), Vector2(69.5691, 49.6922), Vector2(69.7006, 49.7861), Vector2(69.8083, 49.863), Vector2(69.8921, 49.9229), Vector2(69.952, 49.9657), Vector2(69.988, 49.9914), Vector2(70, 50)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AudioStreamPlayer:volume_db")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, -30.0]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Camera2D:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4, 0.466667, 0.533333, 0.6, 0.666667, 0.733333, 0.8, 0.866667, 0.933333, 1, 1.06667, 1.13333, 1.2, 1.26667, 1.33333, 1.4, 1.46667, 1.53333, 1.6, 1.66667, 1.73333, 1.8, 1.86667, 1.93333, 2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.0, -0.000191222, -0.000762793, -0.00170845, -0.00301783, -0.0046766, -0.00666656, -0.00896594, -0.0115495, -0.014389, -0.0174533, -0.0207088, -0.0241199, -0.0276491, -0.0312579, -0.0349066, -0.0385553, -0.0421641, -0.0456933, -0.0491044, -0.0523599, -0.0554242, -0.0582637, -0.0608472, -0.0631466, -0.0651366, -0.0667953, -0.0681047, -0.0690504, -0.0696219, -0.0698132]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_puqlp"]
_data = {
"Default": SubResource("Animation_1xwaf"),
"RESET": SubResource("Animation_8ftfr"),
"Starting": SubResource("Animation_wkp6e")
}

[sub_resource type="LabelSettings" id="LabelSettings_njv6d"]
font = ExtResource("4_bxykl")
shadow_size = 0
shadow_color = Color(0, 0, 0, 1)
shadow_offset = Vector2(0, 2)

[node name="StartMenu2" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_r3qrl")

[node name="TextureRect" type="TextureRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_xvb34")
expand_mode = 1

[node name="Control" type="Control" parent="."]
clip_contents = true
anchors_preset = 0
offset_left = 459.0
offset_top = 277.0
offset_right = 821.0
offset_bottom = 566.0

[node name="Door" type="TextureRect" parent="Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_right = -2.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_4m80e")
expand_mode = 1

[node name="Label" type="Label" parent="Control/Door"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -141.0
offset_top = -52.5
offset_right = 99.0
offset_bottom = 46.5
grow_horizontal = 2
grow_vertical = 2
rotation = -0.154258
pivot_offset = Vector2(126.863, 55.4614)
text = "开
      铁匠铺↑"
label_settings = SubResource("LabelSettings_uckqx")
horizontal_alignment = 1
vertical_alignment = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
unique_name_in_owner = true
libraries = {
"": SubResource("AnimationLibrary_puqlp")
}

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("1_t5j8v")
bus = &"BGM"
parameters/looping = false

[node name="Timer" type="Timer" parent="."]
wait_time = 7.0
autostart = true

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2(640, 373)
ignore_rotation = false

[node name="LyricCanvasLayer" type="CanvasLayer" parent="."]
layer = 0

[node name="Label" type="Label" parent="LyricCanvasLayer"]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -67.0
offset_top = -28.0
offset_right = 51.0
offset_bottom = -5.0
grow_horizontal = 2
label_settings = SubResource("LabelSettings_njv6d")
horizontal_alignment = 1
vertical_alignment = 1

[node name="Label2" type="Label" parent="LyricCanvasLayer"]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -44.0
offset_right = 44.0
offset_bottom = 23.0
grow_horizontal = 2
size_flags_horizontal = 0
label_settings = SubResource("LabelSettings_njv6d")
horizontal_alignment = 1
vertical_alignment = 1

[connection signal="finished" from="AudioStreamPlayer" to="." method="_on_audio_stream_player_finished"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
