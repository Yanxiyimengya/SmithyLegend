[gd_scene load_steps=57 format=3 uid="uid://3cfrpxyldmeo"]

[ext_resource type="Texture2D" uid="uid://dd5iektgt1ybs" path="res://Graphics/StartMenu/background_ow.png" id="1_023tj"]
[ext_resource type="Texture2D" uid="uid://djccodq7284xy" path="res://Graphics/UI/crafetting_table.png" id="1_d0ag6"]
[ext_resource type="PackedScene" uid="uid://c7n0juspclyhv" path="res://Scenes/Game/ItemBar/item_bar_gui.tscn" id="2_knh23"]
[ext_resource type="AudioStream" uid="uid://b0p08668ehd82" path="res://Audio/StartMenuBGM.MP3" id="2_revas"]
[ext_resource type="Texture2D" uid="uid://nwsibve3ecjt" path="res://Graphics/bg_bottom.png" id="4_1ae1r"]
[ext_resource type="Texture2D" uid="uid://c20py6hhsmvit" path="res://Graphics/IronWorker/IronWorkerVillager.png" id="4_p5dng"]
[ext_resource type="Texture2D" uid="uid://pe41418sdo4k" path="res://Graphics/Item/bundle_filled.png" id="5_2gwds"]
[ext_resource type="Script" path="res://Scenes/Game/check_box.gd" id="6_60qey"]
[ext_resource type="PackedScene" uid="uid://bfy43uxjjft4f" path="res://Scenes/Game/furnace.tscn" id="6_el30o"]
[ext_resource type="Texture2D" uid="uid://ddsd236iqpq7p" path="res://Graphics/ParticleEffect/glint.png" id="7_mb2el"]
[ext_resource type="Texture2D" uid="uid://dyen6hgu1oemv" path="res://Graphics/btop.png" id="9_5vbty"]
[ext_resource type="Texture2D" uid="uid://62nwtyoqw3ry" path="res://Graphics/BlockTexture/crafting_table_top.png" id="10_u4yik"]
[ext_resource type="Shader" path="res://Shaders/chopping_block.gdshader" id="11_1pr1c"]
[ext_resource type="PackedScene" uid="uid://cuf2wici1h57u" path="res://Scenes/Game/chopping_block.tscn" id="11_ejne7"]
[ext_resource type="Texture2D" uid="uid://sujr27hdoigy" path="res://Graphics/BlockTexture/oak_log.png" id="12_6snk1"]
[ext_resource type="Texture2D" uid="uid://cdc6p81i0fo2k" path="res://Graphics/UI/ui.png" id="13_a0fom"]
[ext_resource type="Texture2D" uid="uid://n2ytkgauhjg3" path="res://Graphics/Item/emerald.png" id="15_6qgt2"]
[ext_resource type="FontFile" uid="uid://c0n8s8gx2dm18" path="res://Fonts/MinecraftAECN.ttf" id="16_dlhgu"]

[sub_resource type="GDScript" id="GDScript_4do7n"]
script/source = "extends Node2D;

@onready var game_scene: Node2D = $GameScene;
@onready var iron_worker_soundplayer : AudioStreamPlayer = $GameScene/SmithyHouse/IronWorkerSoundPlayer;
@onready var smithy_house : Node2D = $GameScene/SmithyHouse;
@onready var iron_worker_villager : Sprite2D = $GameScene/SmithyHouse/Marker2D/IronWorkerVillager;
@onready var crafting_table_canvas_layer: CanvasLayer = $CraftingTableCanvasLayer;
@onready var item_bar: Control = $GameScene/SmithyHouse/ItemBar;
@onready var mine_list: Node2D = $GameScene/WorkSpace/GirndstonePlantform/MineList;

var ingredient_list : Array[String] = [\"raw_copper\", \"raw_iron\"];
var day : int = 0;

func _ready() -> void : 
	item_bar.add_item_bar(\"raw_copper\", \"粗铜\");
	item_bar.add_item_bar(\"raw_iron\", \"粗铁\");
	if (\"gold_upgrade\" in Global.upgrade_list) : 
		ingredient_list.append(\"raw_gold\");
		item_bar.add_item_bar(\"raw_gold\", \"粗金\");
	mine_list.create_mine();
	
	if (day == 0) : 
		pause_game();
		await get_tree().create_timer(1).timeout;
		smithy_house.villiger_speaking = true;
		iron_worker_soundplayer.stream = preload(\"res://Audio/Sound/Villiger/day1_voice1.MP3\");
		iron_worker_soundplayer.play();
		await iron_worker_soundplayer.finished;
		smithy_house.villiger_speaking = false;
		
		await get_tree().create_timer(0.25).timeout;
		smithy_house.villiger_speaking = true;
		iron_worker_soundplayer.stream = preload(\"res://Audio/Sound/Villiger/day1_voice2.MP3\");
		iron_worker_soundplayer.play();
		await iron_worker_soundplayer.finished;
		smithy_house.villiger_speaking = false;
		resume_game();

func pause_game() : 
	game_scene.set_process(false);
	game_scene.set_physics_process(false);
	game_scene.process_mode = Node.PROCESS_MODE_DISABLED;
func resume_game() : 
	game_scene.set_process(true);
	game_scene.set_physics_process(true);
	game_scene.process_mode = Node.PROCESS_MODE_INHERIT;
"

[sub_resource type="GDScript" id="GDScript_mlhnp"]
script/source = "extends Node2D;
@onready var crafting_table_canvas_layer: CanvasLayer = $\"../CraftingTableCanvasLayer\";

func _on_creafetting_table_button_pressed() -> void:
	crafting_table_canvas_layer.open();
"

[sub_resource type="GDScript" id="GDScript_eu4ge"]
script/source = "extends Node2D
 
var nomal_list : Array[String] = [\"plank\",\"copper_ingot\", \"iron_ingot\"];
var iron_list : Array[String] = [
	\"iron_shovel\", \"iron_axe\", \"iron_sword\", \"iron_boots\", \"iron_hoe\", \"iron_pickaxe\", \"iron_axe\",
	 \"iron_sword\", \"iron_helmet\", \"iron_leggings\", \"iron_chestplate\"
];
var golden_list : Array[String] = [ \"gold_ingot\", 
	\"golden_shovel\", \"golden_axe\", \"golden_sword\", \"golden_boots\", \"golden_hoe\", \"golden_pickaxe\", \"golden_axe\",
	 \"golden_sword\", \"golden_helmet\", \"golden_leggings\", \"golden_chestplate\"
];

var global_list : Array[String] = [];


@onready var slot_marker : Array[Node] = [$Slot1, $Slot2, $Slot3];
@onready var timer: Timer = $Timer;

var character_list : Array[Node] = [null, null, null];
const CHARACTER = preload(\"res://Scenes/Game/Characters/character.tscn\");

func _ready() -> void:
	global_list.append_array(nomal_list);
	if (\"iron_upgrade\" in Global.upgrade_list) : 
		global_list.append_array(iron_list);
	if (\"gold_upgrade\" in Global.upgrade_list) : 
		global_list.append_array(golden_list);

func summon_diff_character(count : int) : 
	var result_list : Array[String] = [];
	for i : int in range(count) : 
		result_list.append(global_list[randi() % global_list.size()]);
	
	var slot : int = 0;
	for n : Node in character_list : 
		if (n == null) : 
			summon_character(result_list, slot);
			break;
		slot += 1;

@onready var gui_layer: CanvasLayer = $\"../../GUILayer\";
func summon_character(result : Array[String], slot : int) : 
	await get_tree().process_frame;
	if (character_list[slot] != null) : return;
	var character_node : Node = CHARACTER.instantiate();
	add_child(character_node);
	character_list[slot] = character_node;
	character_node.set_result(result);
	character_node.global_position = Vector2([300, 1280 + 40].pick_random(),520);
	await character_node.walk_to(slot_marker[slot].global_position);
	character_node.can_be_provided = true;
	character_node.exited.connect(func(angry : bool) : 
		if (!angry) : 
			gui_layer.create_emerald_effect(character_node.global_position-Vector2(0, 200), Vector2(25, 25), 1);
		character_node.can_be_provided = false;
		character_list[slot] = null;
		await character_node.walk_to(Vector2([300, 1280 + 80].pick_random(),520));
		character_node.queue_free();
	);

func _on_timer_timeout() -> void : 
	summon_diff_character(randi() % 3 + 1);
	timer.start(randf_range(4, 8));
	pass;
"

[sub_resource type="GDScript" id="GDScript_0we0t"]
script/source = "extends Node2D;

@onready var item_bar: Control = $ItemBar;
@onready var bag_export_marker: Marker2D = $Marker2D/IronWorkerVillager/Bag/BagExportMarker
@onready var animation_player: AnimationPlayer = $AnimationPlayer;
@onready var iron_worker_villager: Sprite2D = $Marker2D/IronWorkerVillager;
var villiger_speaking : bool = false : 
	set(value) :
		if (value) :
			animation_player.play(&\"VillagerSpeakingAnim\");
		else : 
			animation_player.stop();
		villiger_speaking = value;

@onready var mine_list: Node2D = $\"../WorkSpace/GirndstonePlantform/MineList\";
const BUNDLE_REMOVE_SOUND : Array[AudioStream] = [
	preload(\"res://Audio/Sound/Bundle_remove_one1.ogg\"),
	preload(\"res://Audio/Sound/Bundle_remove_one2.ogg\"),
	preload(\"res://Audio/Sound/Bundle_remove_one3.ogg\"),
];

func _ready() -> void : 
	item_bar.select_item.connect(func(item_id : Variant) : 
		AudioManager.play_suond(BUNDLE_REMOVE_SOUND[randi() % 3]);
		var mine_slot : Node2D = mine_list.get_node(item_id);
		iron_worker_villager.replenishment(bag_export_marker.global_position, mine_slot.global_position, Global.item_dict[item_id][\"texture\"], mine_slot);
	);
	
	pass;
"

[sub_resource type="GDScript" id="GDScript_a3pdo"]
script/source = "extends Sprite2D;
@onready var item_bar: Control = $\"../../ItemBar\";
@onready var bag_sprite : Sprite2D = $Bag;


var can_open_gui : bool= true;
var gui_openning : bool= false;

var VILLIGER_SOUND_HAGGLE : Array[AudioStream] = [
	preload(\"res://Audio/VilligerSound/Villager_haggle1.ogg\"),
	preload(\"res://Audio/VilligerSound/Villager_haggle2.ogg\")
];
var VILLIGER_SOUND_IDLE : Array[AudioStream] = [
	preload(\"res://Audio/VilligerSound/Villager_idle1.ogg\"),
	preload(\"res://Audio/VilligerSound/Villager_idle2.ogg\"),
	preload(\"res://Audio/VilligerSound/Villager_idle3.ogg\")
];


const ITEM_ADD_EFFECT = preload(\"res://Scenes/Game/Effect/item_add_effect.tscn\");
func replenishment(start : Vector2, end : Vector2, item_texture : Texture2D, item_slot : Node) : 
	var tween : Tween = get_tree().create_tween().set_parallel(true);
	tween.tween_property(bag_sprite, \"scale\", Vector2.ONE * 9.3, 0.1);
	tween.tween_property(bag_sprite, \"position\", Vector2(90, -475), 0.1);
	tween.chain();
	tween.tween_property(bag_sprite, \"scale\", Vector2.ONE * 9, 0.1);
	tween.tween_property(bag_sprite, \"position\", Vector2(90, -465), 0.1);
	tween.chain();
	
	var item : Node = ITEM_ADD_EFFECT.instantiate();
	item.start_position = start;
	item.target_position = end + Vector2(randi_range(-20, 20), randi_range(-20, 20));
	item.control_point = Vector2(end.x, start.y - start.distance_to(end) * 0.4) + Vector2(randi_range(-50, 50), randi_range(-40, 120));
	item.texture = item_texture;
	
	item.rotation_degrees = randf_range(0, PI*2);
	item.rotation_speed = randf_range(-5, 5);
	item.speed = 1.6;
	
	get_tree().current_scene.add_child(item);
	
	item.finshed.connect(func() : 
		if (item_slot) : 
			item_slot.append_item();
	);


func _on_check_box_gui_input(event: InputEvent) -> void:
	if (event is InputEventMouse && event.is_pressed() && event.button_index == MOUSE_BUTTON_LEFT) : 
		if (can_open_gui) : 
			var tween : Tween = get_tree().create_tween();
			if (gui_openning) : 
				AudioManager.play_suond(VILLIGER_SOUND_IDLE[randi() % 3]);
				tween.tween_property(self, \"rotation_degrees\", 8.0, 0.2);
				tween.tween_property(item_bar, \"position:x\", 230.0, 0.3).set_ease(Tween.EASE_IN).set_trans(Tween.TRANS_SINE);
				item_bar.process_mode = Node.PROCESS_MODE_DISABLED;
			else : 
				AudioManager.play_suond(VILLIGER_SOUND_HAGGLE[randi() % 2]);
				tween.tween_property(self, \"rotation_degrees\", 2.0, 0.2);
				tween.tween_property(item_bar, \"position:x\", 490.0, 0.4).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_CIRC);
				item_bar.process_mode = Node.PROCESS_MODE_INHERIT;
			can_open_gui = false;
			await tween.finished;
			can_open_gui = true;
			gui_openning = !gui_openning;
"

[sub_resource type="Curve" id="Curve_6l8tq"]
_data = [Vector2(0.0294118, 1), 0.0, 0.0, 0, 0, Vector2(0.863636, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="CurveTexture_kacuu"]
curve = SubResource("Curve_6l8tq")

[sub_resource type="Curve" id="Curve_i7jbf"]
max_value = 3.0
_data = [Vector2(0, 1.81319), 0.0, 0.0, 0, 0, Vector2(0.772727, 1.68132), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="CurveTexture_bgsbx"]
curve = SubResource("Curve_i7jbf")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_fxdm6"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(130, 400, 1)
direction = Vector3(0, -1, 0)
initial_velocity_max = 25.0
gravity = Vector3(0, -3, 0)
scale_min = 2.0
scale_max = 2.0
scale_over_velocity_curve = SubResource("CurveTexture_bgsbx")
alpha_curve = SubResource("CurveTexture_kacuu")

[sub_resource type="Animation" id="Animation_osi8j"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.139626]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.5, 0.5)]
}

[sub_resource type="Animation" id="Animation_7dvpy"]
resource_name = "VillagerHappy"
length = 0.3
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.21),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0.5, 0.5), Vector2(0.52, 0.52), Vector2(0.5, 0.5)]
}

[sub_resource type="Animation" id="Animation_5g8x2"]
resource_name = "VillagerIdle"
length = 5.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4, 0.466667, 0.533333, 0.6, 0.666667, 0.733333, 0.8, 0.866667, 0.933333, 1, 4, 4.06667, 4.13333, 4.2, 4.26667, 4.33333, 4.4, 4.46667, 4.53333, 4.6, 4.66667, 4.73333, 4.8, 4.86667, 4.93333, 5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0.139626, 0.140389, 0.142644, 0.146293, 0.151176, 0.157079, 0.163746, 0.170884, 0.178182, 0.18532, 0.191986, 0.19789, 0.202773, 0.206422, 0.208677, 0.20944, 0.20944, 0.208677, 0.206422, 0.202773, 0.19789, 0.191986, 0.18532, 0.178182, 0.170884, 0.163746, 0.15708, 0.151176, 0.146293, 0.142644, 0.140389, 0.139626]
}

[sub_resource type="Animation" id="Animation_ban0g"]
resource_name = "VillagerSoundAnim"
length = 0.15
loop_mode = 1
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.05, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, -5), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.05, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.139626, 0.139626, 0.139626]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GameScene/SmithyHouse/Marker2D/IronWorkerVillager:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.05, 0.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0.5, 0.5), Vector2(0.51, 0.51), Vector2(0.5, 0.5)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_hm501"]
_data = {
"RESET": SubResource("Animation_osi8j"),
"VillagerHappy": SubResource("Animation_7dvpy"),
"VillagerIdle": SubResource("Animation_5g8x2"),
"VillagerSpeakingAnim": SubResource("Animation_ban0g")
}

[sub_resource type="GDScript" id="GDScript_tf0w6"]
script/source = "extends Node2D
@onready var furnace_scene: Node3D = $\"../../SubViewportContainer/SubViewport/FurnaceScene\";
const MINE = preload(\"res://Scenes/Game/mine.tscn\");
@onready var game: Node2D = $\"../../../..\";

func create_mine() -> void:
	var item_info : Dictionary;
	var pos : Vector2 = Vector2.ZERO;
	for key : String in game.ingredient_list : 
		item_info = Global.item_dict[key];
		var mine_slot : Node = MINE.instantiate();
		mine_slot.item_texture = item_info[\"texture\"];
		mine_slot.item_type = key;
		mine_slot.name = key;
		mine_slot.position = pos;
		add_child(mine_slot);
		pos.x += 300;
"

[sub_resource type="GDScript" id="GDScript_tlro2"]
script/source = "extends SubViewportContainer;
@onready var furnace_scene: Node3D = $SubViewport/FurnaceScene;

var collision_node : Node = null;
var furnace_count : int = 4;

func _ready() -> void : 
	for i : int in round(furnace_count) : 
		furnace_scene.add_furnace();
	for furn : Node3D in furnace_scene.furnace_list : 
		furn.timeout.connect(func() : 
			var pos : Vector2 = furn.get_viewport().get_camera_3d().unproject_position(furn.global_position);
			pos += self.global_position;
		);
	DragManager.register_object(self);

func _process(delta: float) -> void:
	collision_node = get_area();

func _dm_can_drag(as_position : Vector2, data : Variant) : 
	if (data && data is Array && data.size() > 0) : 
		if (data[0] == \"IngredientsDrag\") : 
			if (collision_node && Global.item_dict[data[1]][\"can_smelt\"]) : 
				var parent : Node = collision_node.get_parent();
				if ( (parent.item_type == data[1] || !parent.on) && parent.item_count < 2) :
					return true;
	return false;

func _dm_drop_data(data : Variant) : 
	var parent : Node = collision_node.get_parent();
	parent.set_on(true, data[1]);
	parent.item_count += 1;
	furnace_scene.play_anim(&\"Shake\");

const CLICK_SOUND = preload(\"res://Audio/Sound/Click.ogg\");
func _on_furnace_scene_finished(furnace: Node3D) -> void : 
	var sp : String = Global.item_dict[furnace.item_type][\"smelt_products\"];
	if (!sp.is_empty()) : 
		AudioManager.play_suond(CLICK_SOUND);
		var camera : Camera3D = furnace_scene.get_viewport().get_camera_3d();
		var drop_item : Node2D = DragManager.create_drop_item(Global.item_dict[furnace.item_type][\"smelt_products\"]);
		drop_item.global_position = self.global_position + camera.unproject_position(furnace.export_marked.global_position) * 2;
		drop_item.drag_protected = true;
		drop_item.velocity = (Vector2.ONE).rotated(randf_range(PI*0.7, PI*0.85)) * randf_range(0.5, 1.8) * 200;

func get_area() -> Area3D : 
	var result : Area3D = null;
	var world_3d : World3D = furnace_scene.get_world_3d(); # 获取3D世界
	var space_state : PhysicsDirectSpaceState3D = world_3d.direct_space_state; # 获取物理空间状态
	
	var camera : Camera3D = furnace_scene.get_viewport().get_camera_3d();
	var mouse_position : Vector2 = furnace_scene.get_viewport().get_mouse_position();
	var from : Vector3 = camera.project_ray_origin(mouse_position);
	var normal : Vector3 = camera.project_ray_normal(mouse_position);
	# 获取碰撞射线
	
	var raycast : PhysicsRayQueryParameters3D = PhysicsRayQueryParameters3D.create(from, from + normal * 9999);
	# 构建射线碰撞类实例
	
	raycast.collide_with_areas = true;
	raycast.collide_with_bodies = false;
	var dict : Dictionary = space_state.intersect_ray(raycast); # 检查碰撞
	if (!dict.is_empty() && dict.has(\"collider\")) : 
		result = dict[\"collider\"];
	
	return result;
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_ik3wn"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_qf1l2"]
sky_material = SubResource("ProceduralSkyMaterial_ik3wn")

[sub_resource type="Environment" id="Environment_ma1js"]
background_mode = 2
sky = SubResource("Sky_qf1l2")

[sub_resource type="World3D" id="World3D_rq8vb"]
environment = SubResource("Environment_ma1js")

[sub_resource type="GDScript" id="GDScript_nlnoi"]
script/source = "extends SubViewportContainer;
@onready var chopping_block: Node3D = $SubViewport/ChoppingBlock;
@onready var hit_timer: Timer = $HitTimer;

var collision_node : Node = null;
var products : String = \"log\";
var products_count : int = 1;

func _process(delta: float) -> void:
	collision_node = get_area();

func _gui_input(event: InputEvent) -> void:
	if (event is InputEventMouse && event.button_mask == MOUSE_BUTTON_MASK_LEFT) : 
		if (event.is_pressed()) : 
			if (collision_node != null && !DragManager.dragging) : 
				chopping_block.destory_process += 1;

func get_area() -> Area3D : 
	var result : Area3D = null;
	var world_3d : World3D = chopping_block.get_world_3d(); # 获取3D世界
	var space_state : PhysicsDirectSpaceState3D = world_3d.direct_space_state; # 获取物理空间状态
	
	var camera : Camera3D = chopping_block.get_viewport().get_camera_3d();
	var mouse_position : Vector2 = chopping_block.get_viewport().get_mouse_position();
	var from : Vector3 = camera.project_ray_origin(mouse_position);
	var normal : Vector3 = camera.project_ray_normal(mouse_position);
	# 获取碰撞射线
	
	var raycast : PhysicsRayQueryParameters3D = PhysicsRayQueryParameters3D.create(from, from + normal * 9999);
	# 构建射线碰撞类实例
	
	raycast.collide_with_areas = true;
	raycast.collide_with_bodies = false;
	var dict : Dictionary = space_state.intersect_ray(raycast); # 检查碰撞
	if (!dict.is_empty() && dict.has(\"collider\")) : 
		result = dict[\"collider\"];
	return result;

const POP = preload(\"res://Audio/Sound/pop.ogg\");
@onready var particle_sprite: Sprite2D = $ParticleSprite;
var particle_progress : float = 0.0 : 
	set(value) : 
		$ParticleSprite.material.set_shader_parameter(\"progress\", value);
	get : return $ParticleSprite.material.get_shader_parameter(\"progress\");
func _on_chopping_block_destoried() -> void:
	if (products != \"\") : 
		var camera : Camera3D = chopping_block.get_viewport().get_camera_3d();
		for i : int in range(products_count) : 
			var drop_item : Node2D = DragManager.create_drop_item(self.products);
			drop_item.global_position = self.global_position + camera.unproject_position(chopping_block.global_position);
			drop_item.global_position.y -= 100;
			drop_item.drag_protected = true;
			drop_item.velocity = (Vector2.RIGHT).rotated(-randf_range(0.0, PI*0.4)) * randf_range(650,700);
		var tween : Tween = get_tree().create_tween();
		particle_sprite.visible = true;
		tween.tween_property(self, \"particle_progress\", 2.0, 1.0).from(0.0);
		await tween.finished;
		particle_sprite.visible = false;

func _on_hit_timer_timeout() -> void :
	hit_timer.start();
	chopping_block.destory_process += 1;
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_askkj"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_jo5bs"]
sky_material = SubResource("ProceduralSkyMaterial_askkj")

[sub_resource type="Environment" id="Environment_81h6v"]
background_mode = 2
sky = SubResource("Sky_jo5bs")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="World3D" id="World3D_pr1ub"]
environment = SubResource("Environment_81h6v")

[sub_resource type="Curve" id="Curve_afwo6"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.366397, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_mbuqc"]
curve = SubResource("Curve_afwo6")

[sub_resource type="Curve" id="Curve_fhlm6"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_418hl"]
curve = SubResource("Curve_fhlm6")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vtcv4"]
resource_local_to_scene = true
shader = ExtResource("11_1pr1c")
shader_parameter/time_factor = 0.0
shader_parameter/progress = 0.0
shader_parameter/oneshot = true
shader_parameter/init_size = 0.036
shader_parameter/init_interval = 0.129
shader_parameter/init_offset = 0.1
shader_parameter/init_num = 5.0
shader_parameter/init_direction = Vector2(-0.7, 1)
shader_parameter/rnd_direction_factor = Vector2(3.215, 1)
shader_parameter/rnd_size_factor = Vector2(1, 1)
shader_parameter/rnd_rotate_factor = 0.0
shader_parameter/rnd_rotate_offset = 0.0
shader_parameter/angle_velocity_min = 0.0
shader_parameter/angle_velocity_max = 0.0
shader_parameter/expand_factor = Vector2(4, 4)
shader_parameter/expand_offset = Vector2(-1.635, -1.165)
shader_parameter/bounce_thresh = 0.0
shader_parameter/bounce_factor = 0.0
shader_parameter/life_rate_alpha_decay_curve = SubResource("CurveTexture_mbuqc")
shader_parameter/life_rate_scale_decay_curve = SubResource("CurveTexture_418hl")

[sub_resource type="GDScript" id="GDScript_biu8m"]
script/source = "extends CanvasLayer;
@onready var emerald_sprite: Sprite2D = $EmeraldSprite;
@onready var emerald_count_label: Label = $Label;
var emerald_count : float = 0.0;
var label_emerald_count : float = 0.0 : 
	set(value) : 
		label_emerald_count = value;
		emerald_count_label.text = str(round(value));

const EMERALD_EFFECT = preload(\"res://Scenes/Game/Effect/emerald_effect.tscn\");

func _ready() -> void:
	label_emerald_count = Global.emerald_count;

func _process(delta: float) -> void:
	if (emerald_count != Global.emerald_count) : 
		var tween : Tween = get_tree().create_tween();
		emerald_count = Global.emerald_count;
		tween.tween_property(self, \"label_emerald_count\", emerald_count, 1.0).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_SINE);

func create_emerald_effect(start : Vector2, end : Vector2, value : float) : 
	var item : Node = EMERALD_EFFECT.instantiate();
	item.time_scale = randf_range(2, 3);
	item.start_position = start;
	item.target_position = end;
	item.control_point = Vector2(randf_range(start.x, end.x), randf_range(start.y, end.y));
	self.add_child(item);
	item.finshed.connect(func() : 
		Global.emerald_count += value;
	);
"

[sub_resource type="LabelSettings" id="LabelSettings_qggfy"]
font = ExtResource("16_dlhgu")
font_size = 24
shadow_size = 0
shadow_color = Color(0, 0, 0, 1)
shadow_offset = Vector2(2, 2)

[sub_resource type="GDScript" id="GDScript_0awf5"]
script/source = "extends CanvasLayer
@onready var color_rect: ColorRect = $ColorRect;
@onready var crafetting_table_ui : TextureRect = $CrafettingTable;
@onready var game_scene: Node2D = $\"../GameScene\";

const CLICK_SOUND = preload(\"res://Audio/Sound/Click.ogg\");

func open() : 
	visible = true;
	AudioManager.play_suond(CLICK_SOUND);
	var tween : Tween = get_tree().create_tween();
	tween.tween_property(color_rect, \"color:a\", 0.2, 0.1).from(0.0);
	self.process_mode = Node.PROCESS_MODE_INHERIT;

func close() : 
	self.process_mode = Node.PROCESS_MODE_DISABLED;
	var tween : Tween = get_tree().create_tween();
	tween.tween_property(color_rect, \"color:a\", 0.0, 0.1);
	await tween.finished;
	visible = false;
"

[sub_resource type="GDScript" id="GDScript_qqnw0"]
script/source = "extends TextureRect

const CREAFTING_TABLE_SLOT = preload(\"res://Scenes/Game/creafting_table_slot.tscn\");
@onready var grid_container: GridContainer = $GridContainer;
@onready var crafting_table_canvas_layer: CanvasLayer = $\"..\";
@onready var target_item_texture_rect: TextureRect = $Button/TargetItem;
@onready var target_item_number_label: Label = $Button/TargetItem/TargetItemNumber;
@onready var slot_export: Marker2D = $SlotExport;

var item_slots : Array[Control] = [
	null, null, null,
	null, null, null,
	null, null, null,
];
var slot_target : Control = null;
var dragging_item : String = \"\";
var dragging : bool = false;

var target_item : String = \"\" : 
	set(value) : 
		target_item = value;
		if (Global.item_dict.has(value)) : 
			$Button/TargetItem.texture = Global.item_dict[value][\"texture\"];
			$Button/TargetItem.size = Vector2(55, 55);
		else : 
			$Button/TargetItem.texture = null;
var target_item_count : int = 0 : 
	set(value) : 
		target_item_count = value;
		target_item_number_label.visible = (value > 1);
		target_item_number_label.text = str(value);

func _ready() -> void : 
	DragManager.register_object(self);
	DragManager.drag_endding.connect(func(success : bool) : 
		if (!success && dragging) : 
			var drop_item : Node2D = DragManager.create_drop_item(dragging_item);
			drop_item.global_position = get_global_mouse_position();
			drop_item.item_type = dragging_item;
		dragging = false;
		slot_target = null;
	);
	for i : int in round(9) : 
		var slot : Control = CREAFTING_TABLE_SLOT.instantiate();
		grid_container.add_child(slot);
		item_slots[i] = slot;

func _unhandled_input(event: InputEvent) -> void:
	if (event is InputEventMouseButton && !DragManager.dragging) : 
		if (event.is_pressed() && event.button_index == MOUSE_BUTTON_LEFT) : 
			crafting_table_canvas_layer.close();

func _dm_drag_data(as_position : Vector2) : 
	for slot : Control in item_slots : 
		if (slot.get_global_rect().has_point(get_global_mouse_position())) : 
			slot_target = slot;
			break;
	if (slot_target == null) : return null;
	var type : String = slot_target.item_type;
	if (Global.item_dict.has(type)) : 
		var spr : Sprite2D = Sprite2D.new();
		spr.texture = Global.item_dict[type][\"texture\"];
		spr.scale = Vector2.ONE * 4;
		DragManager.set_drag_preview(spr);
		dragging_item = type;
		slot_target.item_count -= 1;
		if (slot_target.item_count <= 0) : 
			slot_target.item_type = \"\";
		dragging = true;
		update_recipe();
		return [\"IngredientsDrag\", type];
	return null;

func _dm_can_drag(as_position : Vector2, data : Variant) : 
	if (Rect2(Vector2.ZERO, size).has_point(as_position)) : 
		if (data && data is Array) : 
			if (data[0] == \"IngredientsDrag\") : 
				for slot : Control in item_slots : 
					if (slot.get_global_rect().has_point(get_global_mouse_position())) : 
						slot_target = slot;
						return true;
						break;
	return false;

func _dm_drop_data(data : Variant) : 
	if (slot_target == null) : return null;
	if (slot_target.item_type == data[1] || (slot_target.item_type == \"\")) : 
		slot_target.item_type = data[1];
		slot_target.item_count += 1;
	else : 
		for i : int in range(slot_target.item_count) : 
			var drop_item : Node2D = DragManager.create_drop_item(slot_target.item_type);
			drop_item.global_position = get_global_mouse_position();
			drop_item.drag_protected = true;
		slot_target.item_type = data[1];
		slot_target.item_count = 1;
	update_recipe();

func cut_recipe_array(recipe: Array[String]) -> Array[String]:
	var min_x: int = 3 # 最大行数
	var max_x: int = -1 # 最小行数
	var min_y: int = 3 # 最大列数
	var max_y: int = -1 # 最小列数
	
	# 确定非空字符串的边界
	for x in range(3):
		for y in range(3):
			if recipe[x + y * 3] != \"\":
				if x < min_x:
					min_x = x
				if x > max_x:
					max_x = x
				if y < min_y:
					min_y = y
				if y > max_y:
					max_y = y

	# 如果没有找到非空字符串，返回空数组
	if max_x == -1:
		return []

	# 计算裁剪后的数组宽度
	var width := max_x - min_x + 1

	# 裁剪数组
	var cropped_recipe: Array[String] = []
	var index := 0
	for y in range(min_y, max_y + 1):
		for x in range(min_x, max_x + 1):
			cropped_recipe.append(recipe[x + y * 3])
			index += 1
		# 补全每行空缺
		for _i in range(width, 3):
			cropped_recipe.append(\"\")
			index += 1

	return cropped_recipe

func update_recipe() : 
	var recipe : Array[String] = [];
	for slot : Control in item_slots : 
		recipe.append(slot.item_type);
	recipe = cut_recipe_array(recipe);
	var recipe_dict : Dictionary = Global.search_recipe_target_item(recipe); # 用最小配方查询
	if (!recipe_dict.is_empty()) : 
		target_item_count = recipe_dict[\"count\"];
		target_item = recipe_dict[\"item\"];
	else : 
		target_item_count = 0;
		target_item = \"\";

func _on_button_pressed() -> void:
	if (target_item == \"\") : return;
	for i : int in target_item_count : 
		var drop_item : Node2D = DragManager.create_drop_item(target_item);
		drop_item.global_position = slot_export.global_position;
		drop_item.drag_protected = true;
		drop_item.velocity = (Vector2.UP).rotated(deg_to_rad(randf_range(-45,45))) * randf_range(650,700);
	for i in round(9) : 
		item_slots[i].item_count -= 1;
		if (item_slots[i].item_count <= 0) : 
			item_slots[i].item_type = \"\";
	update_recipe();
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_yk1vo"]

[sub_resource type="LabelSettings" id="LabelSettings_apjou"]
font = ExtResource("16_dlhgu")
font_size = 24
shadow_size = 0
shadow_color = Color(0, 0, 0, 1)
shadow_offset = Vector2(2, 2)

[sub_resource type="StyleBoxTexture" id="StyleBoxTexture_i6db6"]
texture = ExtResource("13_a0fom")
texture_margin_left = 5.0
texture_margin_top = 18.0
texture_margin_right = 5.0
texture_margin_bottom = 10.0
expand_margin_left = 5.0
expand_margin_top = 18.0
expand_margin_right = 5.0
expand_margin_bottom = 10.0

[node name="Game" type="Node2D"]
y_sort_enabled = true
script = SubResource("GDScript_4do7n")

[node name="Background" type="Sprite2D" parent="."]
z_index = -10
texture_filter = 2
position = Vector2(705, 280)
scale = Vector2(0.542838, 0.542838)
texture = ExtResource("1_023tj")

[node name="BGMPlayer" type="AudioStreamPlayer" parent="Background"]
stream = ExtResource("2_revas")
volume_db = -1.0
autoplay = true
parameters/looping = true

[node name="GameScene" type="Node2D" parent="."]
position = Vector2(-1, -4)
script = SubResource("GDScript_mlhnp")

[node name="Characters" type="Node2D" parent="GameScene"]
z_index = -1
y_sort_enabled = true
position = Vector2(1, 4)
script = SubResource("GDScript_eu4ge")

[node name="Slot1" type="Marker2D" parent="GameScene/Characters"]
position = Vector2(500, 543)

[node name="Slot2" type="Marker2D" parent="GameScene/Characters"]
position = Vector2(700, 543)

[node name="Slot3" type="Marker2D" parent="GameScene/Characters"]
position = Vector2(900, 543)

[node name="Timer" type="Timer" parent="GameScene/Characters"]
one_shot = true
autostart = true

[node name="SmithyHouse" type="Node2D" parent="GameScene"]
position = Vector2(-70, 33)
script = SubResource("GDScript_0we0t")

[node name="ItemBar" parent="GameScene/SmithyHouse" instance=ExtResource("2_knh23")]
process_mode = 4
offset_left = 230.0
offset_top = 170.0
offset_right = 323.0
offset_bottom = 292.0
scale = Vector2(2, 2)
mouse_filter = 2

[node name="SmithyR" type="Sprite2D" parent="GameScene/SmithyHouse"]
position = Vector2(713.85, 342)
scale = Vector2(0.5, 0.5)
texture = ExtResource("4_1ae1r")
region_rect = Rect2(849.149, 0, 246.781, 1335)

[node name="Marker2D" type="Marker2D" parent="GameScene/SmithyHouse"]
position = Vector2(292, 674)

[node name="IronWorkerVillager" type="Sprite2D" parent="GameScene/SmithyHouse/Marker2D"]
rotation = 0.139626
scale = Vector2(0.5, 0.5)
texture = ExtResource("4_p5dng")
offset = Vector2(15.9168, -447.12)
script = SubResource("GDScript_a3pdo")

[node name="Bag" type="Sprite2D" parent="GameScene/SmithyHouse/Marker2D/IronWorkerVillager"]
position = Vector2(90, -465)
scale = Vector2(9, 9)
texture = ExtResource("5_2gwds")
offset = Vector2(0.0930252, -3.81526)

[node name="BagExportMarker" type="Marker2D" parent="GameScene/SmithyHouse/Marker2D/IronWorkerVillager/Bag"]
position = Vector2(1.75304, -9.08237)

[node name="CheckBox" type="Control" parent="GameScene/SmithyHouse/Marker2D/IronWorkerVillager"]
layout_mode = 3
anchors_preset = 0
offset_left = -165.0
offset_top = -883.0
offset_right = 162.0
offset_bottom = -318.0
script = ExtResource("6_60qey")

[node name="GPUParticles2D" type="GPUParticles2D" parent="GameScene/SmithyHouse/Marker2D/IronWorkerVillager/CheckBox"]
z_index = 1
position = Vector2(170.706, 351.147)
emitting = false
amount = 25
process_material = SubResource("ParticleProcessMaterial_fxdm6")
texture = ExtResource("7_mb2el")
one_shot = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="GameScene/SmithyHouse"]
process_mode = 3
root_node = NodePath("../../..")
libraries = {
"": SubResource("AnimationLibrary_hm501")
}

[node name="IronWorkerSoundPlayer" type="AudioStreamPlayer" parent="GameScene/SmithyHouse"]
process_mode = 3

[node name="WorkSpace" type="Node2D" parent="GameScene"]
process_mode = 3
position = Vector2(113, 47)
scale = Vector2(0.5, 0.5)

[node name="GirndstonePlantform" type="Sprite2D" parent="GameScene/WorkSpace"]
position = Vector2(1061.12, 656)
texture = ExtResource("9_5vbty")

[node name="MineList" type="Node2D" parent="GameScene/WorkSpace/GirndstonePlantform"]
position = Vector2(-308, 252)
script = SubResource("GDScript_tf0w6")

[node name="SubViewportContainer" type="SubViewportContainer" parent="GameScene/WorkSpace"]
offset_left = 1982.0
offset_top = -330.0
offset_right = 2185.0
offset_bottom = 70.0
scale = Vector2(4, 4)
stretch = true
script = SubResource("GDScript_tlro2")

[node name="SubViewport" type="SubViewport" parent="GameScene/WorkSpace/SubViewportContainer"]
world_3d = SubResource("World3D_rq8vb")
transparent_bg = true
handle_input_locally = false
size = Vector2i(203, 400)
render_target_update_mode = 4

[node name="FurnaceScene" parent="GameScene/WorkSpace/SubViewportContainer/SubViewport" instance=ExtResource("6_el30o")]

[node name="SubViewportContainer2" type="SubViewportContainer" parent="GameScene/WorkSpace"]
y_sort_enabled = true
offset_left = -130.0
offset_top = 1166.0
offset_right = 23.0
offset_bottom = 1327.0
scale = Vector2(2, 2)
pivot_offset = Vector2(82, 149)
stretch = true
script = SubResource("GDScript_nlnoi")

[node name="SubViewport" type="SubViewport" parent="GameScene/WorkSpace/SubViewportContainer2"]
world_3d = SubResource("World3D_pr1ub")
transparent_bg = true
handle_input_locally = false
size = Vector2i(153, 161)
render_target_update_mode = 4

[node name="ChoppingBlock" parent="GameScene/WorkSpace/SubViewportContainer2/SubViewport" instance=ExtResource("11_ejne7")]

[node name="ParticleSprite" type="Sprite2D" parent="GameScene/WorkSpace/SubViewportContainer2"]
visible = false
material = SubResource("ShaderMaterial_vtcv4")
position = Vector2(86, 65.5)
scale = Vector2(6, 6)
texture = ExtResource("12_6snk1")

[node name="HitTimer" type="Timer" parent="GameScene/WorkSpace/SubViewportContainer2"]
wait_time = 0.1
one_shot = true

[node name="CraftingTableButton" type="TextureButton" parent="GameScene"]
offset_left = 1180.0
offset_top = 652.0
offset_right = 1262.0
offset_bottom = 734.0
texture_normal = ExtResource("10_u4yik")
stretch_mode = 0

[node name="GUILayer" type="CanvasLayer" parent="."]
layer = 3
script = SubResource("GDScript_biu8m")

[node name="EmeraldSprite" type="Sprite2D" parent="GUILayer"]
position = Vector2(35, 34)
scale = Vector2(3, 3)
texture = ExtResource("15_6qgt2")

[node name="Label" type="Label" parent="GUILayer"]
offset_left = 75.0
offset_top = 25.0
offset_right = 93.0
offset_bottom = 49.0
text = "0"
label_settings = SubResource("LabelSettings_qggfy")

[node name="CraftingTableCanvasLayer" type="CanvasLayer" parent="."]
process_mode = 4
visible = false
script = SubResource("GDScript_0awf5")

[node name="ColorRect" type="ColorRect" parent="CraftingTableCanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0, 0, 0, 0.388235)

[node name="CrafettingTable" type="TextureRect" parent="CraftingTableCanvasLayer"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -131.0
offset_top = -115.5
offset_right = 427.0
offset_bottom = 141.5
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 0
texture = ExtResource("1_d0ag6")
script = SubResource("GDScript_qqnw0")

[node name="SlotExport" type="Marker2D" parent="CraftingTableCanvasLayer/CrafettingTable"]
position = Vector2(417, 139)

[node name="GridContainer" type="GridContainer" parent="CraftingTableCanvasLayer/CrafettingTable"]
layout_mode = 2
anchor_left = 0.17
anchor_top = 0.21
anchor_right = 0.466
anchor_bottom = 0.852
offset_left = 0.139999
offset_top = 0.0299988
offset_right = 1484.97
offset_bottom = 1485.04
grow_horizontal = 2
grow_vertical = 0
scale = Vector2(0.1, 0.1)
theme_override_constants/h_separation = 50
theme_override_constants/v_separation = 50
columns = 3

[node name="Button" type="Button" parent="CraftingTableCanvasLayer/CrafettingTable"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 361.0
offset_top = 83.0
offset_right = -82.0
offset_bottom = -67.0
grow_horizontal = 2
grow_vertical = 2
theme_override_styles/focus = SubResource("StyleBoxEmpty_yk1vo")
flat = true

[node name="TargetItem" type="TextureRect" parent="CraftingTableCanvasLayer/CrafettingTable/Button"]
layout_mode = 0
offset_left = 30.0
offset_top = 27.0
offset_right = 85.0
offset_bottom = 82.0
expand_mode = 1

[node name="TargetItemNumber" type="Label" parent="CraftingTableCanvasLayer/CrafettingTable/Button/TargetItem"]
visible = false
layout_mode = 1
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -33.0
offset_top = -18.0
offset_right = 7.0
offset_bottom = 6.0
grow_horizontal = 0
grow_vertical = 0
text = "0"
label_settings = SubResource("LabelSettings_apjou")
horizontal_alignment = 2
vertical_alignment = 2

[node name="Panel" type="Panel" parent="CraftingTableCanvasLayer"]
texture_filter = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 198.0
offset_top = 233.0
offset_right = -1015.0
offset_bottom = -433.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(4, 4)
theme_override_styles/panel = SubResource("StyleBoxTexture_i6db6")

[node name="VBoxContainer" type="VBoxContainer" parent="CraftingTableCanvasLayer/Panel"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 1.0
offset_top = 1.0
offset_right = -1.0
offset_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[connection signal="timeout" from="GameScene/Characters/Timer" to="GameScene/Characters" method="_on_timer_timeout"]
[connection signal="gui_input" from="GameScene/SmithyHouse/Marker2D/IronWorkerVillager/CheckBox" to="GameScene/SmithyHouse/Marker2D/IronWorkerVillager" method="_on_check_box_gui_input"]
[connection signal="finished" from="GameScene/WorkSpace/SubViewportContainer/SubViewport/FurnaceScene" to="GameScene/WorkSpace/SubViewportContainer" method="_on_furnace_scene_finished"]
[connection signal="destoried" from="GameScene/WorkSpace/SubViewportContainer2/SubViewport/ChoppingBlock" to="GameScene/WorkSpace/SubViewportContainer2" method="_on_chopping_block_destoried"]
[connection signal="timeout" from="GameScene/WorkSpace/SubViewportContainer2/HitTimer" to="GameScene/WorkSpace/SubViewportContainer2" method="_on_hit_timer_timeout"]
[connection signal="pressed" from="GameScene/CraftingTableButton" to="GameScene" method="_on_creafetting_table_button_pressed"]
[connection signal="pressed" from="CraftingTableCanvasLayer/CrafettingTable/Button" to="CraftingTableCanvasLayer/CrafettingTable" method="_on_button_pressed"]
